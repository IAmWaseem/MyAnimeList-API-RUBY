# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module MyAnimeListApi
  class MangaController < BaseController
    @@instance = MangaController.new
    # Singleton instance of the controller class
    def self.instance
      @@instance
    end

    # Returns a specific Anime.
    # @return Mixed response from the API call
    def retrieve_an_anime

      # prepare query url
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/anime/:manga_id'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body) if not (_context.response.raw_body.nil? or _context.response.raw_body.to_s.strip.empty?)
      return decoded
    end

    # Returns all manga matching query
    # @return Mixed response from the API call
    def search_for_an_anime

      # prepare query url
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/manga/:query'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body) if not (_context.response.raw_body.nil? or _context.response.raw_body.to_s.strip.empty?)
      return decoded
    end
  end
end
